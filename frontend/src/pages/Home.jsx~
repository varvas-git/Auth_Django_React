import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import LoginModal from '../components/LoginModal';
import RegisterModal from '../components/RegisterModal';
import api from '../api'; // Импорт настроенного экземпляра api

export default function Home({ isAuthenticated, user, setIsAuthenticated, setUser }) {
  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);
  const [isRegisterModalOpen, setIsRegisterModalOpen] = useState(false);
  const navigate = useNavigate();

  const openLoginModal = () => {
    setIsLoginModalOpen(true);
    setIsRegisterModalOpen(false);
  };

  const openRegisterModal = () => {
    setIsRegisterModalOpen(true);
    setIsLoginModalOpen(false);
  };

  const closeModals = () => {
    setIsLoginModalOpen(false);
    setIsRegisterModalOpen(false);
  };

  const handleLogout = async () => {
    try {
      const refreshToken = localStorage.getItem('refresh_token');

      if (refreshToken) {
        // Используем настроенный api вместо fetch
        await api.post('/api/logout/', { refresh: refreshToken }, {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('access_token')}`
          }
        });
      }
    } catch (error) {
      console.error("Logout error:", error);
    }

    // Удаляем токены независимо от результата запроса
    localStorage.removeItem('access_token');
    localStorage.removeItem('refresh_token');

    // Обновляем состояние
    setIsAuthenticated(false);
    setUser(null);
  };

  const goToProfile = () => {
    navigate('/profile');
  };

  return (
    <div className="min-h-screen flex flex-col">
      {/* Header */}
      <header className="bg-white shadow">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16 items-center">
            <div className="flex">
              <div className="flex-shrink-0 flex items-center">
                <span className="text-indigo-600 font-bold text-xl">МойСайт</span>
              </div>
            </div>

            {isAuthenticated ? (
              <div className="flex items-center space-x-4">
                {user && (
                  <span className="text-gray-700">
                    Привет, {user.username || user.email}
                  </span>
                )}
                <button
                  onClick={goToProfile}
                  className="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                >
                  Мой профиль
                </button>
                <button
                  onClick={handleLogout}
                  className="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                >
                  Выход
                </button>
              </div>
            ) : (
              <div className="flex space-x-4">
                <button
                  onClick={openLoginModal}
                  className="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                >
                  Вход
                </button>
                <button
                  onClick={openRegisterModal}
                  className="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                >
                  Регистрация
                </button>
              </div>
            )}
          </div>
        </div>
      </header>

      {/* Main content */}
      <main className="flex-grow">
        <div className="max-w-7xl mx-auto py-16 px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <h1 className="text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl">
              <span className="block">Добро пожаловать на</span>
              <span className="block text-indigo-600">наш сайт</span>
            </h1>

            {isAuthenticated ? (
              <div>
                <p className="mt-3 max-w-md mx-auto text-base text-gray-500 sm:text-lg md:mt-5 md:text-xl md:max-w-3xl">
                  Спасибо, что вы с нами! Теперь у вас есть доступ ко всем нашим сервисам и функциям.
                </p>
                <div className="mt-10 flex justify-center">
                  <div className="inline-flex rounded-md shadow">
                    <button
                      onClick={goToProfile}
                      className="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    >
                      Перейти в профиль
                    </button>
                  </div>
                </div>
              </div>
            ) : (
              <div>
                <p className="mt-3 max-w-md mx-auto text-base text-gray-500 sm:text-lg md:mt-5 md:text-xl md:max-w-3xl">
                  Здесь вы найдете всё необходимое для работы с нашими сервисами.
                  Зарегистрируйтесь или войдите, чтобы получить доступ к полному функционалу.
                </p>
                <div className="mt-10 flex justify-center">
                  <div className="inline-flex rounded-md shadow">
                    <button
                      onClick={openRegisterModal}
                      className="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    >
                      Начать сейчас
                    </button>
                  </div>
                  <div className="ml-3 inline-flex">
                    <button
                      onClick={openLoginModal}
                      className="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    >
                      Уже есть аккаунт
                    </button>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </main>

      {/* Footer */}
      <footer className="bg-white border-t border-gray-200 py-6">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <p className="text-center text-gray-500 text-sm">
            &copy; {new Date().getFullYear()} МойСайт. Все права защищены.
          </p>
        </div>
      </footer>

      {/* Modals */}
      {isLoginModalOpen && (
        <LoginModal
          onClose={closeModals}
          onSwitchToRegister={openRegisterModal}
          setIsAuthenticated={setIsAuthenticated}
          setUser={setUser}
        />
      )}

      {isRegisterModalOpen && (
        <RegisterModal
          onClose={closeModals}
          onSwitchToLogin={openLoginModal}
          setIsAuthenticated={setIsAuthenticated}
          setUser={setUser}
        />
      )}
    </div>
  );
}